### Гайд: Установка Redis через WSL (Ubuntu)

---

## 1. Включить и обновить WSL

1. **Открыть PowerShell от имени администратора**

   ```powershell
   wsl --install
   ```

   *(Если уже установлен — просто `wsl` или `wsl -l -v`)*

2. **Открыть Ubuntu в первый раз**
   В меню Пуск ищем «Ubuntu», запускаем, доустанавливаем:

   ```sh
   sudo apt update
   sudo apt upgrade
   ```

---

## 2. Установка Redis в Ubuntu (WSL)

1. **Установить Redis**

   ```sh
   sudo apt install redis-server
   ```

2. **Проверить версию**

   ```sh
   redis-server --version
   ```

---

## 3. Запуск Redis

#### Есть два способа:

### **A. Как обычное приложение (в вашем терминале):**

```sh
redis-server
```

* **Плюсы**: Всё видно в терминале, легко остановить через `Ctrl+C`, удобно для ручного теста.
* **Минусы**: Закроете окно — Redis остановится.

### **B. Как сервис (демон в фоне):**

```sh
sudo service redis-server start
```

* **Плюсы**: Redis работает всегда в фоне, не зависит от вашего терминала.
* **Минусы**: Для остановки/рестарта нужны команды `sudo service redis-server stop`/`restart`.

**Проверить статус:**

```sh
sudo service redis-server status
```

**Остановить:**

```sh
sudo service redis-server stop
```

**Перезапустить:**

```sh
sudo service redis-server restart
```

---

## 4. Проверка работы

1. В отдельном терминале:

   ```sh
   redis-cli
   ```
2. В консоли:

   ```sh
   ping
   ```

   Ответ:

   ```text
   PONG
   ```

---

## 5. Доступ из Windows

Redis по умолчанию слушает **только localhost внутри WSL**.
Spring Boot, запущенный в Windows, по адресу `localhost:6379` увидит ваш Redis в WSL без доп.настроек.

Если нет — используйте IP, полученный командой:

```sh
hostname -I
```

---

## 6. Разница «сервер» vs «сервис»

| Как запускается                | Для кого подходит              | Сценарий                                                                             |
| ------------------------------ | ------------------------------ | ------------------------------------------------------------------------------------ |
| **redis-server**               | Вручную для разработки         | Вы сами следите за процессом, Redis завершится, когда закроете терминал/WSL          |
| **service redis-server start** | Для стабильной работы (фоново) | Redis стартует как демон, не зависит от сессии, не останавливается при закрытии окна |

**Для вас:**

* Если нужен только на время запуска — достаточно `redis-server`.
* Если вы хотите, чтобы Redis всегда был доступен, даже после перезагрузки WSL — лучше запускать как сервис.

---

## 7. Автоматический запуск Redis при старте WSL

Если хотите, чтобы Redis запускался вместе с WSL:

```sh
sudo systemctl enable redis-server
```

---

## 8. Полезные команды

* **Проверить, какие процессы используют порт 6379:**

  ```sh
  sudo netstat -tulpn | grep 6379
  ```
* **Изменить конфиг:**
  Файл `/etc/redis/redis.conf`

---

## 9. Удаление (если потребуется)

```sh
sudo apt remove --purge redis-server
sudo apt autoremove
```

---

### **Резюме**

* **`redis-server`** — быстрый запуск «на поиграться».
* **`service redis-server start`** — фон, автозапуск, удобно для работы сервиса или прод-режима.
* Оба режима для вашей задачи подходят, но для долгой работы или совместимости с Spring Boot лучше сервис.

Если будет нужно — подскажу, как поменять порты, настроить безопасность или добавить пользователей!
